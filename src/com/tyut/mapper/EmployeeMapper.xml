<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyut.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.tyut.po.Employee" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="GENDER" property="gender" jdbcType="VARCHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
    <result column="DEP_ID" property="depId" jdbcType="INTEGER" />
    <result column="IMP_ROLE_ID" property="impRoleId" jdbcType="INTEGER" />
    <result column="RANK" property="rank" jdbcType="INTEGER" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="INFO" property="info" jdbcType="VARCHAR" />
    <result column="IMP_STATE" property="impState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, EMP_NAME, PASSWORD, GENDER, BIRTHDAY, DEP_ID, IMP_ROLE_ID, RANK, TEL, EMAIL, 
    INFO, IMP_STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tyut.po.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  
  
  
   <!-- 自定义 -->
  <select id="selectByExamplePage" resultMap="BaseResultMap" parameterType="com.tyut.po.vo.EmployeeVo" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit #{jump},#{rows}
  </select>
  
  
  <!-- END -->
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tyut.po.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tyut.po.Employee" >
    insert into employee (ID, EMP_NAME, PASSWORD, 
      GENDER, BIRTHDAY, DEP_ID, 
      IMP_ROLE_ID, RANK, TEL, 
      EMAIL, INFO, IMP_STATE
      )
    values (#{id,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{depId,jdbcType=INTEGER}, 
      #{impRoleId,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{impState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tyut.po.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="empName != null" >
        EMP_NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="gender != null" >
        GENDER,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="depId != null" >
        DEP_ID,
      </if>
      <if test="impRoleId != null" >
        IMP_ROLE_ID,
      </if>
      <if test="rank != null" >
        RANK,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="info != null" >
        INFO,
      </if>
      <if test="impState != null" >
        IMP_STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empName != null" >
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="depId != null" >
        #{depId,jdbcType=INTEGER},
      </if>
      <if test="impRoleId != null" >
        #{impRoleId,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="impState != null" >
        #{impState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tyut.po.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null" >
        EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        GENDER = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        BIRTHDAY = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.depId != null" >
        DEP_ID = #{record.depId,jdbcType=INTEGER},
      </if>
      <if test="record.impRoleId != null" >
        IMP_ROLE_ID = #{record.impRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.rank != null" >
        RANK = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        INFO = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.impState != null" >
        IMP_STATE = #{record.impState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set ID = #{record.id,jdbcType=INTEGER},
      EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      GENDER = #{record.gender,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=DATE},
      DEP_ID = #{record.depId,jdbcType=INTEGER},
      IMP_ROLE_ID = #{record.impRoleId,jdbcType=INTEGER},
      RANK = #{record.rank,jdbcType=INTEGER},
      TEL = #{record.tel,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      INFO = #{record.info,jdbcType=VARCHAR},
      IMP_STATE = #{record.impState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tyut.po.Employee" >
    update employee
    <set >
      <if test="empName != null" >
        EMP_NAME = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        GENDER = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=DATE},
      </if>
      <if test="depId != null" >
        DEP_ID = #{depId,jdbcType=INTEGER},
      </if>
      <if test="impRoleId != null" >
        IMP_ROLE_ID = #{impRoleId,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        RANK = #{rank,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        INFO = #{info,jdbcType=VARCHAR},
      </if>
      <if test="impState != null" >
        IMP_STATE = #{impState,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tyut.po.Employee" >
    update employee
    set EMP_NAME = #{empName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=DATE},
      DEP_ID = #{depId,jdbcType=INTEGER},
      IMP_ROLE_ID = #{impRoleId,jdbcType=INTEGER},
      RANK = #{rank,jdbcType=INTEGER},
      TEL = #{tel,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      INFO = #{info,jdbcType=VARCHAR},
      IMP_STATE = #{impState,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
    <!--	以下为自己新增sql语句   -->
  
  
  
  
  
   <select id="selectByExampleMappingPage" resultMap="EmpWithDepAndRoleResult" parameterType="com.tyut.po.vo.EmployeeVo" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit #{jump},#{rows}
  </select>
  
  <resultMap type="Employee" id="EmpWithDepAndRoleResult">
		<id property="id" column="id"/>
		<result property="empName" column="emp_name"/>
		<result property="password" column="password"/>
		<result property="gender" column="gender"/>
		<result property="birthday" column="birthday"/>
		<result property="rank" column="rank"/>
		<result property="tel" column="tel"/>
		<result property="email" column="email"/>
		<result property="info" column="info"/>
		<result property="impState" column="imp_state"/>
		<result property="depId" column="dep_id"/>
		<result property="impRoleId" column="imp_role_id"/>
		<association property="dep" column="dep_id" javaType="Department" select="com.tyut.mapper.DepartmentMapper.selectByPrimaryKey">
					
		</association>
		<association property="role" column="imp_role_id" javaType="Role" select="com.tyut.mapper.RoleMapper.selectByPrimaryKey">	
		</association>
		
	</resultMap> 
  
  
  
  
  
   <select id="findEmpByID" parameterType="Integer" resultMap="EmpWithDepResult">
		select e.*,dep_name,d.introduction,d.empcount,role_name,r.id rid
		 from EMPLOYEE e,DEPARTMENT d , ROLE r
		where e.dep_id=d.id 
		and e.dep_id=r.dep_id
		and e.ID = #{ ID}
	</select>
	<resultMap type="Employee" id="EmpWithDepResult">
		<id property="id" column="id"/>
		<result property="empName" column="emp_name"/>
		<result property="password" column="password"/>
		<result property="gender" column="gender"/>
		<result property="birthday" column="birthday"/>
		<result property="rank" column="rank"/>
		<result property="tel" column="tel"/>
		<result property="email" column="email"/>
		<result property="info" column="info"/>
		<result property="impState" column="imp_state"/>
		<result property="depId" column="dep_id"/>
		<result property="impRoleId" column="imp_role_id"/>
		<association property="dep" javaType="Department">
			<id property="id" column="dep_id"/>
			<result property="depName" column="dep_name"/>
			<result property="introduction" column="describe"/>
			<result property="empcount" column="empcount"/>			
		</association>
		<association property="role" javaType="Role">
			<id property="id" column="rid"/>
			<result property="depId" column="dep_id"/>
			<result property="roleName" column="role_name"/>	
		</association>
		
	</resultMap> 
	
	
	
</mapper>